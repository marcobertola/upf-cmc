###################################################
### configuration templates (to be used for snapshot and release builds)
variables:
  PDVERSION: 0.49-0
  LANG: C

.build:snapshot: &snapshot
  except:
    - tags
  artifacts: &snapshot_artifacts
    name: ${CI_PROJECT_NAME}_${CI_COMMIT_REF_NAME}_${CI_JOB_NAME%_*}
    paths:
      - artifacts/
    expire_in: 1 week

.build:release: &release
  only:
    - tags
  artifacts: &release_artifacts
    name: ${CI_PROJECT_NAME}_${CI_COMMIT_REF_NAME}_${CI_JOB_NAME%_*}
    paths:
      - artifacts/

.build:linux: &build_linux
  image: gcc
  stage: build
  before_script:
    - apt-get update && apt-get install -y --no-install-recommends make puredata-dev puredata-core
  script:
    - make check
    - make install DESTDIR=$(pwd)/artifacts/${CI_JOB_NAME%_*} pkglibdir=/

.build:macos: &build_macos
  tags:
     - osx
  stage: build
  before_script:
    - wget -q -O Pd.tgz http://msp.ucsd.edu/Software/pd-${PDVERSION}.mac.tar.gz
    - rm -rf /Applications/Pd*.app/
    - tar xvf Pd.tgz -C /Applications/
    - rm -f Pd.tgz
    - export PD=$(find /Applications/Pd*.app/Contents/Resources/bin/ type f -name pd -print -quit)
  script:
    - make check
    - make install DESTDIR=$(pwd)/artifacts/${CI_JOB_NAME%_*} pkglibdir=/

.build:w32: &build_w32
  stage: build
  tags:
    - windows
  variables:
    IEMCI_CONFIGURATIONS: mingw32
  before_script:
    - wget -q -O Pd.zip http://msp.ucsd.edu/Software/pd-${PDVERSION}-i386.msw.zip
    - rm -rf "${PROGRAMFILESX86}/pd" && mkdir -p "${PROGRAMFILESX86}/pd"
    - unzip -q Pd.zip -d "${PROGRAMFILESX86}/pd"
    - mv -v "${PROGRAMFILESX86}/pd"/*/* "${PROGRAMFILESX86}/pd"
    - rm -f Pd.zip
    - export PD="${PROGRAMFILESX86}/pd/bin/pd.com"
  script:
    - make check
    - make install DESTDIR=$(pwd)/artifacts/${CI_JOB_NAME%_*} pkglibdir=/
    - .git-ci/localdeps.win.sh artifacts/${CI_JOB_NAME%_*}/zexy/*.dll || true

.build:w64: &build_w64
  stage: build
  tags:
    - windows
  variables:
    IEMCI_CONFIGURATIONS: mingw64
  before_script:
    - wget -q -O Pd.zip http://msp.ucsd.edu/Software/pd-${PDVERSION}.msw.zip
    - rm -rf "${PROGRAMFILES}/pd" && mkdir -p "${PROGRAMFILES}/pd"
    - unzip -q Pd.zip -d "${PROGRAMFILES}/pd"
    - mv -v "${PROGRAMFILES}/pd"/*/* "${PROGRAMFILES}/pd"
    - rm -f Pd.zip
    - export PD="${PROGRAMFILES}/pd/bin/pd.com"
  script:
    - make check
    - make install DESTDIR=$(pwd)/artifacts/${CI_JOB_NAME%_*} pkglibdir=/
    - .git-ci/localdeps.win.sh artifacts/${CI_JOB_NAME%_*}/zexy/*.dll || true

###################################################
### the actual jobs: (linux,macos,windows)*(release,snapshot)

Linux:
  <<: *build_linux
  <<: *release
Darwin:
  <<: *build_macos
  <<: *release
W32:
  <<: *build_w32
  <<: *release
W64:
  <<: *build_w64
  <<: *release


Linux_snapshot:
  <<: *build_linux
  <<: *snapshot
Darwin_snapshot:
  <<: *build_macos
  <<: *snapshot
W32_snapshot:
  <<: *build_w32
  <<: *snapshot
W64_snapshot:
  <<: *build_w64
  <<: *snapshot

deken:
  stage: deploy
  image: debian:buster
  only:
    - tags
  variables:
    DEKEN_ROOT: "yes"
  before_script:
    - apt-get update && apt-get --no-install-recommends -y install deken git
  script:
    - chmod -R go-w artifacts/
# remove ltlib leftovers
    - find artifacts/ "(" -name "*.la" -or -name "*.a" ")" -delete
# create a source package
    - git archive --format=tar --prefix=artifacts/src/${CI_PROJECT_NAME}/ HEAD | tar xf -
# create deken packages
    - for d in artifacts/*/${CI_PROJECT_NAME}/; do deken package --version="${CI_COMMIT_TAG#v}" "${d}"; done
# upload deken packages
    - test -z "${DEKEN_USERNAME}" || test -z "${DEKEN_PASSWORD}" || deken upload --no-source-error ./*.dek


default:
  after_script:
    - gcc --version
    - df -h
